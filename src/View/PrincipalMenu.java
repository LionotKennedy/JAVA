/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.text.SimpleDateFormat;
import javax.swing.JTable;
import javax.swing.JTextArea;
import java.awt.print.PrinterException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author LionotRAZAFIMANDIMBY
 */
public class PrincipalMenu extends javax.swing.JFrame {

    //code tana
    DefaultTableModel model;
    public static Connection connex = null;
    public static ResultSet resul = null;
    public static PreparedStatement prepare = null;
    static String test;
    static String affecter;
    static String departement;
    static String mission;
    int xMouse;
    int yMouse;

    //ending
    /**
     * Creates new form PrincipalMenu
     */
    public PrincipalMenu() {
        try {
            initComponents();
            //acceuil
            jCont1.setVisible(true);
            jCont2.setVisible(false);
            jCont3.setVisible(false);
            jCont4.setVisible(false);
            jCont5.setVisible(false);
            jCont6.setVisible(false);

            jBtn1.setBackground(Color.white);
            Color color1 = Color.BLACK;
            jBtn1.setForeground(color1);

            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);
            
            /**/jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));
            
            Color color = Color.WHITE;
            jBtn2.setForeground(color);
            jBtn3.setForeground(color);
            jBtn4.setForeground(color);
            jBtn5.setForeground(color);
            jBtn6.setForeground(color);
            jBtn7.setForeground(color);
            
            
            
            
            //code tana io
            this.setSize(1080, 750);
            this.setLocationRelativeTo(null);
            connex = Connexion.DBConnexion.connex;
            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
            ShowDate("", "");
            AffichageNombre();
            AffichageNombreHisto();
            AffichageTotalEmp();
            AffichageTotalAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fermer = new javax.swing.JLabel();
        Reduire = new javax.swing.JLabel();
        Move = new javax.swing.JLabel();
        jNavBar = new javax.swing.JPanel();
        NavBar = new keeptoo.KGradientPanel();
        jBtn7 = new javax.swing.JButton();
        jBtn6 = new javax.swing.JButton();
        jBtn5 = new javax.swing.JButton();
        jBtn4 = new javax.swing.JButton();
        jBtn3 = new javax.swing.JButton();
        jBtn2 = new javax.swing.JButton();
        jBtn1 = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        jCont1 = new javax.swing.JPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        kGradientPanel8 = new keeptoo.KGradientPanel();
        jNombreEmployes = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        kGradientPanel9 = new keeptoo.KGradientPanel();
        jLabel4 = new javax.swing.JLabel();
        jNombreAffect = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kGradientPanel10 = new keeptoo.KGradientPanel();
        jLabel3 = new javax.swing.JLabel();
        ListeHistorique = new javax.swing.JButton();
        jNombreHistorique = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kGradientPanel11 = new keeptoo.KGradientPanel();
        Liste = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        NombreEmpNoAff = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCont2 = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jActualiser = new javax.swing.JButton();
        jSearchEmployes = new javax.swing.JTextField();
        jAjoutEmp = new javax.swing.JButton();
        jUpdateEmp = new javax.swing.JButton();
        jDeleteEmp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmploye = new javax.swing.JTable();
        Search = new javax.swing.JLabel();
        jCont3 = new javax.swing.JPanel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        jActualiserAffectation = new javax.swing.JButton();
        Date1 = new com.toedter.calendar.JDateChooser();
        Date2 = new com.toedter.calendar.JDateChooser();
        jSearch = new javax.swing.JButton();
        jImprimer = new javax.swing.JButton();
        jPrintAll = new javax.swing.JButton();
        jAjoutAffect = new javax.swing.JButton();
        jUpdateAffect = new javax.swing.JButton();
        jDeleteAffectation = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAffect = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCont4 = new javax.swing.JPanel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        jActualiserDepartement = new javax.swing.JButton();
        jAjoutDepart = new javax.swing.JButton();
        jUpdate = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableDepartement = new javax.swing.JTable();
        jCont5 = new javax.swing.JPanel();
        kGradientPanel6 = new keeptoo.KGradientPanel();
        jSuppressionMissions = new javax.swing.JButton();
        jActualisationMission = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableMission = new javax.swing.JTable();
        jCont6 = new javax.swing.JPanel();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableListeEmployesNoAff = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Fermer.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        Fermer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/closed2.png"))); // NOI18N
        Fermer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Fermer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FermerMouseClicked(evt);
            }
        });
        getContentPane().add(Fermer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1022, 10, -1, 40));

        Reduire.setFont(new java.awt.Font("Segoe UI", 0, 100)); // NOI18N
        Reduire.setText("-");
        Reduire.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Reduire.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Reduire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReduireMouseClicked(evt);
            }
        });
        getContentPane().add(Reduire, new org.netbeans.lib.awtextra.AbsoluteConstraints(972, 0, 40, 40));
        Reduire.getAccessibleContext().setAccessibleName("");

        Move.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        Move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                MoveMouseDragged(evt);
            }
        });
        Move.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MoveMousePressed(evt);
            }
        });
        getContentPane().add(Move, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, 970, 40));

        jNavBar.setBackground(new java.awt.Color(30, 59, 77));

        NavBar.setkEndColor(new java.awt.Color(0, 83, 86));
        NavBar.setkStartColor(new java.awt.Color(204, 204, 204));
        NavBar.setkTransparentControls(false);

        jBtn7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Deconn.png"))); // NOI18N
        jBtn7.setText("Deconnexion");
        jBtn7.setFocusPainted(false);
        jBtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn7ActionPerformed(evt);
            }
        });

        jBtn6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Apr.png"))); // NOI18N
        jBtn6.setText("A propos");
        jBtn6.setFocusPainted(false);
        jBtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn6ActionPerformed(evt);
            }
        });

        jBtn5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Miss.png"))); // NOI18N
        jBtn5.setText("Mission");
        jBtn5.setFocusPainted(false);
        jBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn5ActionPerformed(evt);
            }
        });

        jBtn4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Depart.png"))); // NOI18N
        jBtn4.setText("Departement");
        jBtn4.setFocusPainted(false);
        jBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn4ActionPerformed(evt);
            }
        });

        jBtn3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Affect.png"))); // NOI18N
        jBtn3.setText("Affectation");
        jBtn3.setFocusPainted(false);
        jBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn3ActionPerformed(evt);
            }
        });

        jBtn2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Emp.png"))); // NOI18N
        jBtn2.setText("Employée");
        jBtn2.setFocusPainted(false);
        jBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn2ActionPerformed(evt);
            }
        });

        jBtn1.setBackground(new java.awt.Color(51, 204, 255));
        jBtn1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1Home.png"))); // NOI18N
        jBtn1.setText("Acceuil");
        jBtn1.setFocusPainted(false);
        jBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn1ActionPerformed(evt);
            }
        });

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/logo6.png"))); // NOI18N

        javax.swing.GroupLayout NavBarLayout = new javax.swing.GroupLayout(NavBar);
        NavBar.setLayout(NavBarLayout);
        NavBarLayout.setHorizontalGroup(
            NavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtn7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addComponent(jBtn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBtn5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBtn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBtn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(NavBarLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jBtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        NavBarLayout.setVerticalGroup(
            NavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavBarLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jBtn6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118)
                .addComponent(jBtn7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jNavBarLayout = new javax.swing.GroupLayout(jNavBar);
        jNavBar.setLayout(jNavBarLayout);
        jNavBarLayout.setHorizontalGroup(
            jNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NavBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jNavBarLayout.setVerticalGroup(
            jNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jNavBarLayout.createSequentialGroup()
                .addComponent(NavBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jNavBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 760));

        jCont1.setBackground(new java.awt.Color(51, 51, 51));
        jCont1.setAutoscrolls(true);
        jCont1.setPreferredSize(new java.awt.Dimension(820, 750));

        kGradientPanel2.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 255, 255));

        kGradientPanel8.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel8.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jNombreEmployes.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jNombreEmployes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kGradientPanel8.add(jNombreEmployes, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 6, 100, 99));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Nombre de tout employés");
        kGradientPanel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 158, 236, 57));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1checklist.png"))); // NOI18N
        kGradientPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 110, 120));

        kGradientPanel9.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel9.setkStartColor(new java.awt.Color(0, 102, 102));
        kGradientPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Nombre des affectations effectier");
        kGradientPanel9.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 315, 36));

        jNombreAffect.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jNombreAffect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kGradientPanel9.add(jNombreAffect, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 96, 100, 110));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1planning.png"))); // NOI18N
        kGradientPanel9.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 70, 90));

        kGradientPanel10.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel10.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Historique des affectations d’un employé");
        kGradientPanel10.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 154, -1, 58));

        ListeHistorique.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/vue1.png"))); // NOI18N
        ListeHistorique.setBorderPainted(false);
        ListeHistorique.setContentAreaFilled(false);
        ListeHistorique.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ListeHistorique.setFocusPainted(false);
        ListeHistorique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListeHistoriqueActionPerformed(evt);
            }
        });
        kGradientPanel10.add(ListeHistorique, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        jNombreHistorique.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jNombreHistorique.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kGradientPanel10.add(jNombreHistorique, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 6, 120, 126));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1sty.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        kGradientPanel10.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 80, 90));

        kGradientPanel11.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel11.setkStartColor(new java.awt.Color(0, 102, 102));
        kGradientPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Liste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/vue1.png"))); // NOI18N
        Liste.setBorderPainted(false);
        Liste.setContentAreaFilled(false);
        Liste.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Liste.setFocusPainted(false);
        Liste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListeActionPerformed(evt);
            }
        });
        kGradientPanel11.add(Liste, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 40, 33));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Nombre des personnes pas encore été affecté");
        kGradientPanel11.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 14, 329, 44));

        NombreEmpNoAff.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        NombreEmpNoAff.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kGradientPanel11.add(NombreEmpNoAff, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 75, 110, 120));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/1connect.png"))); // NOI18N
        kGradientPanel11.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 100, 80));

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kGradientPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE))
                .addGap(74, 74, 74)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kGradientPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                    .addComponent(kGradientPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kGradientPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(kGradientPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jCont1Layout = new javax.swing.GroupLayout(jCont1);
        jCont1.setLayout(jCont1Layout);
        jCont1Layout.setHorizontalGroup(
            jCont1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jCont1Layout.setVerticalGroup(
            jCont1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jCont1, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 0, 905, 762));

        jCont2.setBackground(new java.awt.Color(0, 51, 51));
        jCont2.setPreferredSize(new java.awt.Dimension(900, 750));
        jCont2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel3.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel3.setkStartColor(new java.awt.Color(255, 255, 255));

        jActualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/actualiser2.png"))); // NOI18N
        jActualiser.setBorderPainted(false);
        jActualiser.setContentAreaFilled(false);
        jActualiser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jActualiser.setFocusPainted(false);
        jActualiser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jActualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualiserActionPerformed(evt);
            }
        });

        jSearchEmployes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jSearchEmployes.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 153, 153)));
        jSearchEmployes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchEmployesActionPerformed(evt);
            }
        });
        jSearchEmployes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSearchEmployesKeyReleased(evt);
            }
        });

        jAjoutEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/plus22.png"))); // NOI18N
        jAjoutEmp.setBorderPainted(false);
        jAjoutEmp.setContentAreaFilled(false);
        jAjoutEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jAjoutEmp.setFocusPainted(false);
        jAjoutEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAjoutEmpActionPerformed(evt);
            }
        });

        jUpdateEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/edit22.png"))); // NOI18N
        jUpdateEmp.setBorderPainted(false);
        jUpdateEmp.setContentAreaFilled(false);
        jUpdateEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jUpdateEmp.setFocusPainted(false);
        jUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateEmpActionPerformed(evt);
            }
        });

        jDeleteEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/delete.png"))); // NOI18N
        jDeleteEmp.setBorderPainted(false);
        jDeleteEmp.setContentAreaFilled(false);
        jDeleteEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDeleteEmp.setFocusPainted(false);
        jDeleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteEmpActionPerformed(evt);
            }
        });

        jTableEmploye.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableEmploye.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° Employe", "Civilite", "Nom", "Prenom", "Poste", "Lieu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEmploye.setRowHeight(45);
        jTableEmploye.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTableEmploye.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTableEmploye.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEmployeMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableEmployeMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEmploye);

        Search.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/search2.png"))); // NOI18N
        Search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(jActualiser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSearchEmployes, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addComponent(jAjoutEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jUpdateEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDeleteEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(34, Short.MAX_VALUE))))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jActualiser, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSearchEmployes, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jUpdateEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAjoutEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDeleteEmp, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(46, 46, 46))
        );

        jCont2.add(kGradientPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 750));

        getContentPane().add(jCont2, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, -8, 910, 770));

        jCont3.setBackground(new java.awt.Color(0, 0, 51));
        jCont3.setMinimumSize(new java.awt.Dimension(820, 750));
        jCont3.setPreferredSize(new java.awt.Dimension(820, 750));
        jCont3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel4.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel4.setkStartColor(new java.awt.Color(255, 255, 255));

        jActualiserAffectation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/actualiser2.png"))); // NOI18N
        jActualiserAffectation.setBorderPainted(false);
        jActualiserAffectation.setContentAreaFilled(false);
        jActualiserAffectation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jActualiserAffectation.setFocusPainted(false);
        jActualiserAffectation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualiserAffectationActionPerformed(evt);
            }
        });

        Date1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 204, 204)));
        Date1.setDateFormatString("yyyy-MM-dd");
        Date1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Date2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 204, 204)));
        Date2.setDateFormatString("yyyy-MM-dd");
        Date2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/search3.png"))); // NOI18N
        jSearch.setText("Recherche");
        jSearch.setBorderPainted(false);
        jSearch.setFocusPainted(false);
        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });

        jImprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/pdf5.png"))); // NOI18N
        jImprimer.setBorderPainted(false);
        jImprimer.setContentAreaFilled(false);
        jImprimer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jImprimer.setFocusPainted(false);
        jImprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImprimerActionPerformed(evt);
            }
        });

        jPrintAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/pdf4.png"))); // NOI18N
        jPrintAll.setBorderPainted(false);
        jPrintAll.setContentAreaFilled(false);
        jPrintAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPrintAll.setFocusPainted(false);
        jPrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrintAllActionPerformed(evt);
            }
        });

        jAjoutAffect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/plus22.png"))); // NOI18N
        jAjoutAffect.setBorderPainted(false);
        jAjoutAffect.setContentAreaFilled(false);
        jAjoutAffect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jAjoutAffect.setFocusPainted(false);
        jAjoutAffect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAjoutAffectActionPerformed(evt);
            }
        });

        jUpdateAffect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/edit22.png"))); // NOI18N
        jUpdateAffect.setBorderPainted(false);
        jUpdateAffect.setContentAreaFilled(false);
        jUpdateAffect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jUpdateAffect.setFocusPainted(false);
        jUpdateAffect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateAffectActionPerformed(evt);
            }
        });

        jDeleteAffectation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/delete.png"))); // NOI18N
        jDeleteAffectation.setBorderPainted(false);
        jDeleteAffectation.setContentAreaFilled(false);
        jDeleteAffectation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDeleteAffectation.setFocusPainted(false);
        jDeleteAffectation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteAffectationActionPerformed(evt);
            }
        });

        jTableAffect.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableAffect.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° Affectation", "Nouveau Lieu", "Ancien Lieu", "Date Affectation", "Date Prise Service"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAffect.setRowHeight(45);
        jTableAffect.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTableAffect.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTableAffect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAffectMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableAffectMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAffect);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("Date Debut");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel11.setText("Date Fin");

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addComponent(jActualiserAffectation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Date1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Date2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jImprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPrintAll, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jAjoutAffect, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jUpdateAffect, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDeleteAffectation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))))
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                .addGap(0, 87, Short.MAX_VALUE)
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(Date2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jActualiserAffectation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addComponent(Date1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPrintAll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jUpdateAffect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAjoutAffect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jImprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDeleteAffectation, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jCont3.add(kGradientPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 750));

        getContentPane().add(jCont3, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, -4, 910, 770));

        jCont4.setBackground(new java.awt.Color(51, 0, 51));
        jCont4.setMinimumSize(new java.awt.Dimension(820, 750));
        jCont4.setPreferredSize(new java.awt.Dimension(820, 750));
        jCont4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel5.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel5.setkStartColor(new java.awt.Color(255, 255, 255));

        jActualiserDepartement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/actualiser2.png"))); // NOI18N
        jActualiserDepartement.setBorderPainted(false);
        jActualiserDepartement.setContentAreaFilled(false);
        jActualiserDepartement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jActualiserDepartement.setFocusPainted(false);
        jActualiserDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualiserDepartementActionPerformed(evt);
            }
        });

        jAjoutDepart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/plus22.png"))); // NOI18N
        jAjoutDepart.setBorderPainted(false);
        jAjoutDepart.setContentAreaFilled(false);
        jAjoutDepart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jAjoutDepart.setFocusPainted(false);
        jAjoutDepart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAjoutDepartActionPerformed(evt);
            }
        });

        jUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/edit22.png"))); // NOI18N
        jUpdate.setBorderPainted(false);
        jUpdate.setContentAreaFilled(false);
        jUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jUpdate.setFocusPainted(false);
        jUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateActionPerformed(evt);
            }
        });

        jDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/delete.png"))); // NOI18N
        jDelete.setBorderPainted(false);
        jDelete.setContentAreaFilled(false);
        jDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDelete.setFocusPainted(false);
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jTableDepartement.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableDepartement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nom departement", "Description departement", "Lieu Departement", "Poste existe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDepartement.setRowHeight(45);
        jTableDepartement.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTableDepartement.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTableDepartement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDepartementMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableDepartementMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableDepartement);

        javax.swing.GroupLayout kGradientPanel5Layout = new javax.swing.GroupLayout(kGradientPanel5);
        kGradientPanel5.setLayout(kGradientPanel5Layout);
        kGradientPanel5Layout.setHorizontalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel5Layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addGroup(kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jActualiserDepartement))
                .addGap(36, 36, 36))
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jAjoutDepart, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        kGradientPanel5Layout.setVerticalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jActualiserDepartement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jUpdate)
                    .addComponent(jAjoutDepart)
                    .addComponent(jDelete))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jCont4.add(kGradientPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 750));

        getContentPane().add(jCont4, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, -4, 910, 770));

        jCont5.setBackground(new java.awt.Color(51, 0, 0));
        jCont5.setMinimumSize(new java.awt.Dimension(820, 750));
        jCont5.setPreferredSize(new java.awt.Dimension(820, 750));
        jCont5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel6.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel6.setkStartColor(new java.awt.Color(255, 255, 255));

        jSuppressionMissions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/delete.png"))); // NOI18N
        jSuppressionMissions.setBorderPainted(false);
        jSuppressionMissions.setContentAreaFilled(false);
        jSuppressionMissions.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSuppressionMissions.setFocusPainted(false);
        jSuppressionMissions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSuppressionMissionsActionPerformed(evt);
            }
        });

        jActualisationMission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java/GestionEmployee/src/icons/actualiser2.png"))); // NOI18N
        jActualisationMission.setBorderPainted(false);
        jActualisationMission.setContentAreaFilled(false);
        jActualisationMission.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jActualisationMission.setFocusPainted(false);
        jActualisationMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualisationMissionActionPerformed(evt);
            }
        });

        jTableMission.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableMission.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom Departement", "Poste dans le departement", "Nom Employe", "Prenom Employe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMission.setRowHeight(30);
        jTableMission.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMissionMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMissionMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTableMission);

        javax.swing.GroupLayout kGradientPanel6Layout = new javax.swing.GroupLayout(kGradientPanel6);
        kGradientPanel6.setLayout(kGradientPanel6Layout);
        kGradientPanel6Layout.setHorizontalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jActualisationMission)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSuppressionMissions, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(31, 31, 31))
        );
        kGradientPanel6Layout.setVerticalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jActualisationMission)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSuppressionMissions, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jCont5.add(kGradientPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 750));

        getContentPane().add(jCont5, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, -4, 910, 770));

        jCont6.setBackground(new java.awt.Color(51, 51, 0));
        jCont6.setMinimumSize(new java.awt.Dimension(820, 750));
        jCont6.setPreferredSize(new java.awt.Dimension(820, 750));
        jCont6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel7.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Liste des personnes pas encore été affecté");

        jTableListeEmployesNoAff.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableListeEmployesNoAff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N", "Civilité", "Nom Employe", "Prenom employes", "Poste", "Lieu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListeEmployesNoAff.setRowHeight(40);
        jScrollPane5.setViewportView(jTableListeEmployesNoAff);

        javax.swing.GroupLayout kGradientPanel7Layout = new javax.swing.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jCont6.add(kGradientPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 750));

        getContentPane().add(jCont6, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, -4, 900, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn3ActionPerformed
        try {
            jCont3.setVisible(true);
            jCont1.setVisible(false);
            jCont2.setVisible(false);
            jCont4.setVisible(false);
            jCont5.setVisible(false);
            jCont6.setVisible(false);

            jBtn3.setBackground(Color.WHITE);
           /* jBtn1.setBackground(new Color(60, 63, 65));
            jBtn2.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/

           
            Color color = Color.BLACK;
            jBtn3.setForeground(color);
            jBtn3.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn4.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn7.setForeground(color1);
            
            jBtn2.setOpaque(false);
            jBtn1.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBtn3ActionPerformed

    private void jBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn5ActionPerformed
        try {
            jCont5.setVisible(true);
            jCont1.setVisible(false);
            jCont2.setVisible(false);
            jCont3.setVisible(false);
            jCont4.setVisible(false);
            jCont6.setVisible(false);

            jBtn5.setBackground(Color.white);
            /*jBtn1.setBackground(new Color(60, 63, 65));
            jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/
            // TODO add your handling code here:

            Color color = Color.BLACK;
            jBtn5.setForeground(color);
            jBtn5.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn4.setForeground(color1);
            jBtn3.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn7.setForeground(color1);
            
            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn1.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);
            

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn5ActionPerformed

    private void jBtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn6ActionPerformed
        try {
            jCont6.setVisible(true);
            jCont1.setVisible(false);
            jCont2.setVisible(false);
            jCont3.setVisible(false);
            jCont4.setVisible(false);
            jCont5.setVisible(false);

            jBtn6.setBackground(Color.white);
            /*jBtn1.setBackground(new Color(60, 63, 65));
            jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/
            // TODO add your handling code here:

            Color color = Color.BLACK;
            jBtn6.setForeground(color);
            jBtn6.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn4.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn3.setForeground(color1);
            jBtn7.setForeground(color1);
            
            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn1.setOpaque(false);
            jBtn7.setOpaque(false);

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn6ActionPerformed

    private void jBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn1ActionPerformed
        try {
            jCont1.setVisible(true);
            jCont2.setVisible(false);
            jCont3.setVisible(false);
            jCont4.setVisible(false);
            jCont5.setVisible(false);
            jCont6.setVisible(false);

            jBtn1.setBackground(Color.white);
           /* jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/
            // TODO add your handling code here:

            Color color = Color.BLACK;
            jBtn1.setForeground(color);
            jBtn1.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn3.setForeground(color1);
            jBtn4.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn7.setForeground(color1);
            
            
            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn1ActionPerformed

    private void jBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn2ActionPerformed
        try {
            jCont2.setVisible(true);
            jCont1.setVisible(false);
            jCont3.setVisible(false);
            jCont4.setVisible(false);
            jCont5.setVisible(false);
            jCont6.setVisible(false);

            jBtn2.setBackground(Color.white);
           /* jBtn1.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/
            // TODO add your handling code here:

            Color color = Color.BLACK;
            jBtn2.setForeground(color);
            jBtn2.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn3.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn4.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn7.setForeground(color1);
            
            
            jBtn1.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn2ActionPerformed

    private void jBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn4ActionPerformed
        try {
            jCont4.setVisible(true);
            jCont1.setVisible(false);
            jCont2.setVisible(false);
            jCont3.setVisible(false);
            jCont5.setVisible(false);
            jCont6.setVisible(false);

            jBtn4.setBackground(Color.white);
           /* jBtn1.setBackground(new Color(60, 63, 65));
            jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn7.setBackground(new Color(60, 63, 65));*/
           
            /* jBtn7.setOpaque(false);
            jBtn7.setContentAreaFilled(false);
            jBtn7.setBorderPainted(false);*/

            // TODO add your handling code here:
            Color color = Color.BLACK;
            jBtn4.setForeground(color);
            jBtn4.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn3.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn7.setForeground(color1);
            
            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn1.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn7.setOpaque(false);

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn4ActionPerformed

    private void jUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateEmpActionPerformed
        UpdateEmp updateEmp = new UpdateEmp();
        updateEmp.setVisible(true);
        updateEmp.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (updateEmp.isInstant()) {
                    try {
                        AffichageEmp();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }//GEN-LAST:event_jUpdateEmpActionPerformed

    private void jAjoutEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAjoutEmpActionPerformed
        AjoutEmp ajoutEmp = new AjoutEmp(this);
        ajoutEmp.setVisible(true);
        ajoutEmp.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (ajoutEmp.isInstant()) {
                    try {
                        AffichageEmp();
                        AffichageAffectation();
                        AffichageDepartement();
                        AffichageMission();
                        AffichageNonAffect();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });

    }//GEN-LAST:event_jAjoutEmpActionPerformed

    public void Recuperation() {
        try {
            int row = jTableEmploye.getSelectedRow();
            this.test = (jTableEmploye.getModel().getValueAt(row, 0).toString());
            String request = "SELECT * FROM employes WHERE numEmp='" + test + "' ";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();

            if (resul.next()) {
                String R1 = resul.getString("numEmp");
                System.out.println(R1);
                String R2 = resul.getString("civilite");
                System.out.println(R2);
                String R3 = resul.getString("nomEmp");
                System.out.println(R3);
                String R4 = resul.getString("prenomEmp");
                System.out.println(R4);
                String R5 = resul.getString("post");
                System.out.println(R5);
                String R6 = resul.getString("lieu");
                System.out.println(R6);
                //recupere.setText(R1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    //recuperer le donnee de la table

    public String GetTableResult() {
        return test;
    }
// ending code 
    private void jTableEmployeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmployeMouseClicked
        Recuperation();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableEmployeMouseClicked

    private void jTableEmployeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmployeMouseReleased
        jDeleteEmp.setEnabled(true);
        jUpdateEmp.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableEmployeMouseReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        jDeleteEmp.setEnabled(false);
        jUpdateEmp.setEnabled(false);
        jDeleteAffectation.setEnabled(false);
        jUpdateAffect.setEnabled(false);
        jUpdate.setEnabled(false);
        jDelete.setEnabled(false);
        jSuppressionMissions.setEnabled(false);
        jImprimer.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jActualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualiserActionPerformed
        try {
            AffichageEmp();
            AffichageNombre();
            AffichageNombre();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jActualiserActionPerformed

    private void jAjoutAffectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAjoutAffectActionPerformed
        AjoutAffect ajoutAffect = new AjoutAffect();
        ajoutAffect.setVisible(true);
        ajoutAffect.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (ajoutAffect.isInstant()) {
                    try {
                        AffichageAffectation();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }//GEN-LAST:event_jAjoutAffectActionPerformed
    // delete affectation
    private void jDeleteAffectationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteAffectationActionPerformed
        try {
            try {
//                if (resul.next()) {} else {
//                    JOptionPane.showMessageDialog(null, "Le ResultSet est vide");
//                }
                String A1 = resul.getString("numAffect");
                if (JOptionPane.showConfirmDialog(null, "Attention vous voulez vraiment supprimer cet liste affecttion?",
                        "Supprimer Employée", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    if (A1.length() != 0) {
                        String requete = "DELETE FROM affectations WHERE numAffect = ?";
                        //String R1 = resul.getString("numEmp");
                        prepare = connex.prepareStatement(requete);
                        prepare.setString(1, A1);
                        prepare.execute();
                        System.out.println("Suppression avec succes");
                        JOptionPane.showMessageDialog(null, "Suppression avec succes");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Veullez selectionner la liste des affectations si vous souhaitez de supprimer");
                }

            } catch (Exception e) {
                System.out.println(e);
            }
            //bouton non clickable
            jDeleteAffectation.setEnabled(false);
            AffichageAffectation();
            AffichageNombreHisto();
            AffichageTotalAffect();
            AffichageNombre();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jDeleteAffectationActionPerformed

    private void jTableAffectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAffectMouseClicked
        RecuperationAffectation();
    }//GEN-LAST:event_jTableAffectMouseClicked

    private void jTableAffectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAffectMouseReleased
        jDeleteAffectation.setEnabled(true);
        jUpdateAffect.setEnabled(true);
        jImprimer.setEnabled(true);
    }//GEN-LAST:event_jTableAffectMouseReleased

    private void jUpdateAffectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateAffectActionPerformed
        UpdateAffectation updateAffectation = new UpdateAffectation();
        updateAffectation.setVisible(true);
        updateAffectation.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (updateAffectation.isInstant()) {
                    try {
                        AffichageAffectation();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }//GEN-LAST:event_jUpdateAffectActionPerformed

    private void jActualiserAffectationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualiserAffectationActionPerformed
        try {
            AffichageAffectation();
            AffichageNombreHisto();
            AffichageTotalAffect();
            AffichageNombre();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jActualiserAffectationActionPerformed

    private void jAjoutDepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAjoutDepartActionPerformed
        AjoutDepartement ajoutdepart = new AjoutDepartement();
        ajoutdepart.setVisible(true);
//        System.out.println("ndao");
        ajoutdepart.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (ajoutdepart.isAjoutValid()) {
                    try {
                        System.out.println("masaky");
                        AffichageDepartement();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
//        System.out.println("eka");

    }//GEN-LAST:event_jAjoutDepartActionPerformed

    private void jUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateActionPerformed
        UpdateDepartement edit = new UpdateDepartement();
        edit.setVisible(true);
        edit.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (edit.isInstant()) {
                    try {
                        AffichageDepartement();
                    } catch (SQLException ex) {
                        Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }//GEN-LAST:event_jUpdateActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        try {
            try {
                String R1 = resul.getString("NomDepart");
                if (JOptionPane.showConfirmDialog(null, "Attention vous voulez vraiment supprimer cet Departement?",
                        "Supprimer Departement", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    if (R1.length() != 0) {
                        String request = "DELETE FROM departements WHERE NomDepart = ?";
                        //String R1 = resul.getString("numEmp");
                        prepare = connex.prepareStatement(request);
                        prepare.setString(1, R1);
                        prepare.execute();
                        System.out.println("Suppression avec succes");
                        JOptionPane.showMessageDialog(null, "Suppression avec succes");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Veullez selectionner si vous souhaitez de supprimer");
                }

            } catch (Exception e) {
                System.out.println(e);
            }
            //bouton non clickable
            jDeleteEmp.setEnabled(false);
            AffichageEmp();
            AffichageDepartement();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jActualiserDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualiserDepartementActionPerformed
        try {
            AffichageDepartement();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jActualiserDepartementActionPerformed

    private void jTableDepartementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDepartementMouseClicked
        RecuperationDepartement();
    }//GEN-LAST:event_jTableDepartementMouseClicked

    private void jTableDepartementMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDepartementMouseReleased
        jUpdate.setEnabled(true);
        jDelete.setEnabled(true);
    }//GEN-LAST:event_jTableDepartementMouseReleased

    private void jTableMissionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMissionMouseClicked
        RecuperationMission();
    }//GEN-LAST:event_jTableMissionMouseClicked

    private void jTableMissionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMissionMouseReleased
        jSuppressionMissions.setEnabled(true);
    }//GEN-LAST:event_jTableMissionMouseReleased

    private void jSuppressionMissionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSuppressionMissionsActionPerformed
        try {
            try {
                String R1 = resul.getString("NomDepart");
                //String R2 = resul.getString("NomDepart");
                if (JOptionPane.showConfirmDialog(null, "Attention vous voulez vraiment supprimer l'employe?",
                        "Supprimer Employée", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    if (R1.length() != 0) {
                        String request = "DELETE FROM departements WHERE NomDepart = ?";
                        //String R1 = resul.getString("numEmp");
                        prepare = connex.prepareStatement(request);
                        prepare.setString(1, R1);
                        prepare.execute();
                        System.out.println("Deleted successfull");
                        JOptionPane.showMessageDialog(null, "Deleted");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Veullez selectionner l'employe");
                }

            } catch (Exception e) {
                System.out.println(e);
            }
            //bouton non clickable
            jDeleteEmp.setEnabled(false);
            AffichageMission();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jSuppressionMissionsActionPerformed

    private void jSearchEmployesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchEmployesKeyReleased

        String search = jSearchEmployes.getText().trim().toLowerCase();
        String query = "SELECT numEmp AS \"N° EMPLOYES\",civilite AS \"CIVILITE\",nomEmp AS \"NOM\",prenomEmp AS \"PRENOM\",post AS \"POSTE\",lieu AS \"LIEU\" FROM employes WHERE LOWER(nomEmp) LIKE ? OR LOWER(prenomEmp) LIKE ?";
        try {
            prepare = connex.prepareStatement(query);
            prepare.setString(1, "%" + search + "%");
            prepare.setString(2, "%" + search + "%");
            resul = prepare.executeQuery();
            jTableEmploye.setModel(DbUtils.resultSetToTableModel(resul));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            for (int i = 0; i < jTableEmploye.getColumnCount(); i++) {
                jTableEmploye.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jSearchEmployesKeyReleased

    private void jActualisationMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualisationMissionActionPerformed
        try {
            AffichageMission();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jActualisationMissionActionPerformed

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed

        if (Date1.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Veuiller remplir le champs date debut");
        } else if (Date2.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Veuiller remplir le champs date fin");
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date1 = sdf.format(Date1.getDate());
            System.out.println(date1);

            SimpleDateFormat affectDate = new SimpleDateFormat("yyyy-MM-dd");
            String date2 = affectDate.format(Date2.getDate());
            System.out.println(date2);
            try {
                //String request = "SELECT numAffect AS \"N° AFFECTATION\",AncienLieu AS \"ANCIEN LIEU\",NouveauLieu AS \"NOUVEAU LIEU\",dateServices AS \"DATE SERVICE\",dateAffect AS \"DATE AFFECTATION\" FROM affectations WHERE dateServices >= '" + date1 + "' AND dateServices <= '" + date2 + "'";
                String request = "SELECT numAffect AS \"N° AFFECTATION\",AncienLieu AS \"ANCIEN LIEU\",NouveauLieu AS \"NOUVEAU LIEU\",dateServices AS \"DATE SERVICE\",dateAffect AS \"DATE AFFECTATION\" FROM affectations WHERE dateServices BETWEEN ?::date AND ?::date OR dateAffect BETWEEN ?::date AND ?::date";
                prepare = connex.prepareStatement(request);
                prepare.setString(1, date1);
                prepare.setString(2, date2);
                prepare.setString(3, date1);
                prepare.setString(4, date2);
                resul = prepare.executeQuery();
                jTableAffect.setModel(DbUtils.resultSetToTableModel(resul));

                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

                for (int i = 0; i < jTableAffect.getColumnCount(); i++) {
                    jTableAffect.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                }

            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_jSearchActionPerformed

    private void jImprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImprimerActionPerformed

        try {

            MessageFormat header = new MessageFormat("A propos des affectation Employés");
            MessageFormat footer = new MessageFormat("pages{0,number,integer}");

            try {

                String A1 = resul.getString("numAffect");
                System.out.println(A1);
                JOptionPane.showMessageDialog(this, "Imprimante d\'affectation numero :"+A1);
                String A2 = resul.getString("AncienLieu");
                System.out.println(A2);
                String A3 = resul.getString("NouveauLieu");
                System.out.println(A3);
                String A4 = resul.getString("dateServices");
                System.out.println(A4);
                String A5 = resul.getString("dateAffect");
                System.out.println(A5);
                String A6 = resul.getString("nomEmp");
                System.out.println(A6);
                String A7 = resul.getString("prenomEmp");
                System.out.println(A7);
                String A8 = resul.getString("civilite");
                System.out.println(A8);
                String A9 = resul.getString("post");
                System.out.println(A9);

                try {

                    PrinterJob printerJob = PrinterJob.getPrinterJob();
                    JTextArea text = new JTextArea("\t" + "\t" + "\t" + "Arrêté N°" + " " + A1 + " " + "du" + " " + A5 + "\n" + "\n"
                            + "\t" + A8 + " " + A6 + " " + A7 + " " + "qui occupe le poste de" + " " + A9 + " " + "à" + " " + A2 + ",est affecté à" + "\n"
                            + "\t" + A3 + " " + "pour compter de la date de prise de service " + " " + A4 + "\n" + "\n"
                            + "\t" + "Le présent communiqué sera enregistré et communiqué partout où besoin sera."
                    );
                    Printable printable = text.getPrintable(header, footer);
                    printerJob.setPrintable(text.getPrintable(null, null));
                    printerJob.setPrintable(printable);
                    if (printerJob.printDialog()) {
                        printerJob.print();
                    }

                } catch (PrinterException e) {

                }

            } catch (Exception e) {
                System.out.println(e);
            }
            JOptionPane.showMessageDialog(this, "Imprimante d\'affectation avec succes !!");
            AffichageAffectation();

        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jImprimerActionPerformed

    private void jPrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrintAllActionPerformed
        try {
            MessageFormat header = new MessageFormat("Liste des affectations Employés");
            MessageFormat footer = new MessageFormat("pages{0,number,integer}");
            try {
                jTableAffect.print(JTable.PrintMode.NORMAL, header, footer);
            } catch (java.awt.print.PrinterException e) {
                System.err.format("erreur d'impression", e.getMessage());
            }
            AffichageAffectation();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPrintAllActionPerformed

    private void ListeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListeActionPerformed
        ListeNonAffect liste = new ListeNonAffect();
        liste.setVisible(true);
    }//GEN-LAST:event_ListeActionPerformed

    private void ListeHistoriqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListeHistoriqueActionPerformed
        ListeHisto historique = new ListeHisto();
        historique.setVisible(true);
    }//GEN-LAST:event_ListeHistoriqueActionPerformed

    //code delete
    private void jDeleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteEmpActionPerformed
        try {
            try {
                String R1 = resul.getString("numEmp");
                if (JOptionPane.showConfirmDialog(null, "Attention vous voulez vraiment supprimer l'employe?",
                        "Supprimer Employée", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    if (R1.length() != 0) {
                        String request = "DELETE FROM employes WHERE numEmp = ?";
                        //String request = "DELETE FROM affectations WHERE AncienLieu IN (SELECT lieu FROM employes WHERE numEmp = ?)";
                        //String R1 = resul.getString("numEmp");
                        prepare = connex.prepareStatement(request);
                        prepare.setString(1, R1);
                        prepare.execute();
                        System.out.println("Suppression avec succes");
                        JOptionPane.showMessageDialog(null, "Suppression avec succes");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Veullez selectionner l'employe");
                }
                AffichageAffectation();
                AffichageNombreHisto();
                AffichageTotalAffect();
                AffichageNombre();
            } catch (Exception e) {
                System.out.println(e);
            }
            //bouton non clickable
            jDeleteEmp.setEnabled(false);
            AffichageEmp();
            AffichageNombre();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jDeleteEmpActionPerformed

    private void FermerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FermerMouseClicked
        System.exit(0);
    }//GEN-LAST:event_FermerMouseClicked

    private void ReduireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReduireMouseClicked
        this.setState(PrincipalMenu.ICONIFIED);
    }//GEN-LAST:event_ReduireMouseClicked

    private void MoveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoveMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_MoveMouseDragged

    private void MoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoveMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_MoveMousePressed

    private void jBtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn7ActionPerformed

        try {
            Color color = Color.BLACK;
            jBtn7.setForeground(color);
            jBtn7.setOpaque(true);

            Color color1 = Color.WHITE;
            jBtn2.setForeground(color1);
            jBtn1.setForeground(color1);
            jBtn3.setForeground(color1);
            jBtn5.setForeground(color1);
            jBtn6.setForeground(color1);
            jBtn4.setForeground(color1);

            jBtn7.setBackground(Color.white);
            /*jBtn1.setBackground(new Color(60, 63, 65));
            jBtn2.setBackground(new Color(60, 63, 65));
            jBtn3.setBackground(new Color(60, 63, 65));
            jBtn5.setBackground(new Color(60, 63, 65));
            jBtn6.setBackground(new Color(60, 63, 65));
            jBtn4.setBackground(new Color(60, 63, 65));*/
            
            
            jBtn2.setOpaque(false);
            jBtn3.setOpaque(false);
            jBtn4.setOpaque(false);
            jBtn5.setOpaque(false);
            jBtn6.setOpaque(false);
            jBtn1.setOpaque(false);

            if (JOptionPane.showConfirmDialog(null, "Attention vous voulez vraiment deconnecter ?",
                    "Deconnecte", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                System.exit(0);
            }

            AffichageEmp();
            AffichageAffectation();
            AffichageDepartement();
            AffichageMission();
            AffichageNonAffect();
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn7ActionPerformed

    private void jSearchEmployesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchEmployesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchEmployesActionPerformed

    //affichage sur le tableau
    public final void AffichageEmp() throws SQLException {
        try {
            String request = "SELECT numEmp AS \"N° EMPLOYES\",civilite AS \"CIVILITE\",nomEmp AS \"NOM\",prenomEmp AS \"PRENOM\",post AS \"POSTE\",lieu AS \"LIEU\" FROM employes ORDER BY numEmp ASC";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();
            jTableEmploye.setModel(DbUtils.resultSetToTableModel(resul));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            for (int i = 0; i < jTableEmploye.getColumnCount(); i++) {
                jTableEmploye.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
 
            JTableHeader header = jTableEmploye.getTableHeader();
           // header.setForeground(Color.WHITE);
            //header.setBackground(Color.GRAY);
            //header.setBackground(new Color(70, 73, 75));
           // header.setBackground(new Color(0,83,86));

            Dimension dimension = header.getPreferredSize();
            dimension.height = 30;
            header.setPreferredSize(dimension);

            ////**** Actualisation ****////
            AffichageNombre();
            AffichageNombreHisto();
            AffichageTotalEmp();
            AffichageTotalAffect();
            ///**** bouton non click ****////
            jUpdate.setEnabled(false);
            jDelete.setEnabled(false);
            jUpdateEmp.setEnabled(false);
            jDeleteEmp.setEnabled(false);
            jImprimer.setEnabled(false);
            jUpdateAffect.setEnabled(false);
            jDeleteAffectation.setEnabled(false);

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    //ending code

    //affichage sur le tableau
    public final void AffichageAffectation() throws SQLException {
        try {
            String request = "SELECT numAffect AS \"N°AFFECTATION\",numEmp_ref AS \"N° EMPLOYES\",AncienLieu AS \"ANCIEN LIEU\", NouveauLieu AS \"NOUVEAU LIEU\",\n"
                    + "dateServices AS \"DATE SERVICE\",dateAffect AS \"DATE AFFECTATION\" FROM affectations ORDER BY numAffect ASC";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();
            jTableAffect.setModel(DbUtils.resultSetToTableModel(resul));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            for (int i = 0; i < jTableAffect.getColumnCount(); i++) {
                jTableAffect.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
            JTableHeader header = jTableAffect.getTableHeader();
            //header.setForeground(Color.WHITE);
           // header.setBackground(Color.GRAY);
            //header.setBackground(new Color(70, 73, 75));
            //header.setBackground(new Color(0,102,102));

            Dimension dimension = header.getPreferredSize();
            dimension.height = 30;
            header.setPreferredSize(dimension);
            
            Date1.setDate(null);
            Date2.setDate(null);
            /////*** actualisation ****/////
            AffichageNombre();
            AffichageNombreHisto();
            AffichageTotalEmp();
            AffichageTotalAffect();
            ///**** bouton non click ****////
            jUpdate.setEnabled(false);
            jDelete.setEnabled(false);
            jUpdateEmp.setEnabled(false);
            jDeleteEmp.setEnabled(false);
            jImprimer.setEnabled(false);
            jUpdateAffect.setEnabled(false);
            jDeleteAffectation.setEnabled(false);

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void RecuperationAffectation() {
        try {
            int row = jTableAffect.getSelectedRow();

            this.affecter = (jTableAffect.getModel().getValueAt(row, 0).toString());

            String Query = "SELECT e.nomEmp,e.prenomEmp,e.civilite,e.post,a.* FROM employes e INNER JOIN affectations a ON e.lieu = a.AncienLieu WHERE a.numAffect='" + affecter + "'";
            prepare = connex.prepareStatement(Query);

            //    String request = "SELECT * FROM affectations WHERE numAffect='" + affecter + "' ";
            //    prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();

            if (resul.next()) {
                String A1 = resul.getString("numAffect");
                System.out.println(A1);
                String A2 = resul.getString("AncienLieu");
                System.out.println(A2);
                String A3 = resul.getString("NouveauLieu");
                System.out.println(A3);
                String A4 = resul.getString("dateServices");
                System.out.println(A4);
                String A5 = resul.getString("dateAffect");
                System.out.println(A5);
                String A6 = resul.getString("nomEmp");
                System.out.println(A6);
                String A7 = resul.getString("prenomEmp");
                System.out.println(A7);
                String A8 = resul.getString("civilite");
                System.out.println(A8);
                String A9 = resul.getString("post");
                System.out.println(A9);                
                ////////////
                String A10 = resul.getString("numEmp_ref");
                System.out.println(A10);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public String GetTableAffectationResult() {
        return affecter;
    }
    //ending code

    //affichage sur le tableau
    public final void AffichageDepartement() throws SQLException {
        try {
            String request = "SELECT idDepart AS \"#\",NomDepart AS \"NOM DEPARTEMENT\" ,DescrDepart AS \"DESCRIPTION DEPARTEMENT\", LieuDepart AS \"LIEU \",PosteExist AS \"POSTE DEPARTEMENT\" FROM departements ORDER BY idDepart ASC";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();
            jTableDepartement.setModel(DbUtils.resultSetToTableModel(resul));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            for (int i = 0; i < jTableDepartement.getColumnCount(); i++) {
                jTableDepartement.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
            JTableHeader header = jTableDepartement.getTableHeader();
          //  header.setForeground(Color.WHITE);
          //  header.setBackground(Color.GRAY);
          //  header.setBackground(new Color(70, 73, 75));

            Dimension dimension = header.getPreferredSize();
            dimension.height = 30;
            header.setPreferredSize(dimension);

            /////***** Actualisation *****/////
            AffichageNombre();
            AffichageNombreHisto();
            AffichageTotalEmp();
            AffichageTotalAffect();
            ///**** bouton non click ****////
            jUpdate.setEnabled(false);
            jDelete.setEnabled(false);
            jUpdateEmp.setEnabled(false);
            jDeleteEmp.setEnabled(false);
            jImprimer.setEnabled(false);
            jUpdateAffect.setEnabled(false);
            jDeleteAffectation.setEnabled(false);

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    //ending code

    public void RecuperationDepartement() {
        try {
            int row = jTableDepartement.getSelectedRow();
            this.departement = (jTableDepartement.getModel().getValueAt(row, 0).toString());
            String request = "SELECT * FROM departements WHERE idDepart='" + departement + "' ";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();

            if (resul.next()) {
                String A0 = resul.getString("idDepart");
                System.out.println(A0);
                String A1 = resul.getString("NomDepart");
                System.out.println(A1);
                String A2 = resul.getString("DescrDepart");
                System.out.println(A2);
                String A3 = resul.getString("LieuDepart");
                System.out.println(A3);
                String A4 = resul.getString("PosteExist");
                System.out.println(A4);
//                String A5 = resul.getString("dateAffect");
//                System.out.println(A5);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public String GetTableDepartemnet() {
        return departement;
    }

    //table mission
    public final void AffichageMission() throws SQLException {
        try {
            String request = "SELECT d.NomDepart,d.PosteExist,e.nomEmp,e.prenomEmp FROM departements d\n"
                    + "JOIN missions ms ON ms.IdDepart_ref=d.idDepart \n"
                    + "JOIN employes e ON e.numEmp=ms.numEmp_ref;";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();
            jTableMission.setModel(DbUtils.resultSetToTableModel(resul));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            for (int i = 0; i < jTableMission.getColumnCount(); i++) {
                jTableMission.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            JTableHeader header = jTableMission.getTableHeader();
//            header.setForeground(Color.WHITE);
//            header.setBackground(Color.GRAY);

            Dimension dimension = header.getPreferredSize();
            dimension.height = 30;
            header.setPreferredSize(dimension);

            /////***** Actualisation *****/////
            AffichageNombre();
            AffichageNombreHisto();
            AffichageTotalEmp();
            AffichageTotalAffect();

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void RecuperationMission() {
        try {
            int row = jTableMission.getSelectedRow();
            this.mission = (jTableMission.getModel().getValueAt(row, 0).toString());
            String request = "SELECT d.NomDepart,d.PosteExist,e.nomEmp,e.prenomEmp FROM departements d\n"
                    + "JOIN missions ms ON ms.IdDepart_ref=d.idDepart \n"
                    + "JOIN employes e ON e.numEmp=ms.numEmp_ref WHERE d.NomDepart = '" + mission + "';";
            prepare = connex.prepareStatement(request);
            resul = prepare.executeQuery();

            if (resul.next()) {
                String A0 = resul.getString("NomDepart");
                System.out.println(A0);
                String A1 = resul.getString("PosteExist");
                System.out.println(A1);
                String A2 = resul.getString("nomEmp");
                System.out.println(A2);
                String A3 = resul.getString("prenomEmp");
                System.out.println(A3);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void ShowDate(String d1, String d2) {
        try {
            if (d1.equals("") || d2.equals("")) {
                prepare = connex.prepareStatement("SELECT * FROM affectations");
                //JOptionPane.showMessageDialog(null,"le champs est vide");

                String request = "SELECT numAffect,AncienLieu,NouveauLieu,dateServices,dateAffect FROM affectations";
                prepare = connex.prepareStatement(request);
                resul = prepare.executeQuery();
//                jTableAffect.setModel(DbUtils.resultSetToTableModel(resul));
            } else {
                prepare = connex.prepareStatement("SELECT * FROM affectations WHERE dateServices BETWEEN ? AND ?");
                prepare.setString(1, d1);
                prepare.setString(2, d2);
                JOptionPane.showMessageDialog(null, d1);
            }
            resul = prepare.executeQuery();
            jTableAffect.setModel(DbUtils.resultSetToTableModel(resul));

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void AffichageNonAffect() {
        try {
            String Query = "SELECT numEmp AS \"NUMERO EMPLOYE\",civilite AS \"CIVILITE\",nomEmp AS \"NOM EMPLOYE\",prenomEmp AS \"PRENOM EMPLOYE\",post AS \"POSTE\",lieu AS \"LIEU\" FROM employes WHERE lieu NOT IN(SELECT AncienLieu FROM affectations)";
            prepare = connex.prepareStatement(Query);
            resul = prepare.executeQuery();
            jTableListeEmployesNoAff.setModel(DbUtils.resultSetToTableModel(resul));

            // Créer un renvoie
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

// Appliquer le renvoie à chaque colonne
            for (int i = 0; i < jTableListeEmployesNoAff.getColumnCount(); i++) {
                jTableListeEmployesNoAff.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            JTableHeader header = jTableListeEmployesNoAff.getTableHeader();
//            header.setForeground(Color.WHITE);
//            header.setBackground(Color.GRAY);

            Dimension dimension = header.getPreferredSize();
            dimension.height = 30;
            header.setPreferredSize(dimension);

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void AffichageNombre() {
        try {
            String Query = "SELECT COUNT(*) AS effectif FROM employes WHERE lieu NOT IN (SELECT AncienLieu FROM affectations)";
            prepare = connex.prepareStatement(Query);
            resul = prepare.executeQuery();
            if (resul.next()) {
                String L1 = resul.getString("effectif");
                System.out.println(L1);
                NombreEmpNoAff.setText(L1);
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void AffichageNombreHisto() {
        try {
            String Requete = "SELECT COUNT(*) AS historique FROM(SELECT e.nomEmp,e.prenomEmp,e.civilite,a.* FROM employes e INNER JOIN affectations a ON e.lieu=a.AncienLieu ORDER BY a.dateAffect)AS subquery";
            prepare = connex.prepareStatement(Requete);
            resul = prepare.executeQuery();
            if (resul.next()) {
                String L2 = resul.getString("historique");
                System.out.println(L2);
                jNombreHistorique.setText(L2);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void AffichageTotalEmp() {
        try {
            String Query = "SELECT COUNT(*) AS TotalEmp FROM employes";
            prepare = connex.prepareStatement(Query);
            resul = prepare.executeQuery();
            if (resul.next()) {
                String K1 = resul.getString("TotalEmp");
                jNombreEmployes.setText(K1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void AffichageTotalAffect() {
        try {
            String Requete = "SELECT COUNT(*) AS TotalAffect FROM affectations";
            prepare = connex.prepareStatement(Requete);
            resul = prepare.executeQuery();
            if (resul.next()) {
                String C1 = resul.getString("TotalAffect");
                jNombreAffect.setText(C1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    //ending code
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Date1;
    private com.toedter.calendar.JDateChooser Date2;
    private javax.swing.JLabel Fermer;
    private javax.swing.JButton Liste;
    private javax.swing.JButton ListeHistorique;
    private javax.swing.JLabel Move;
    private keeptoo.KGradientPanel NavBar;
    private javax.swing.JLabel NombreEmpNoAff;
    private javax.swing.JLabel Reduire;
    private javax.swing.JLabel Search;
    private javax.swing.JButton jActualisationMission;
    private javax.swing.JButton jActualiser;
    private javax.swing.JButton jActualiserAffectation;
    private javax.swing.JButton jActualiserDepartement;
    private javax.swing.JButton jAjoutAffect;
    private javax.swing.JButton jAjoutDepart;
    private javax.swing.JButton jAjoutEmp;
    private javax.swing.JButton jBtn1;
    private javax.swing.JButton jBtn2;
    private javax.swing.JButton jBtn3;
    private javax.swing.JButton jBtn4;
    private javax.swing.JButton jBtn5;
    private javax.swing.JButton jBtn6;
    private javax.swing.JButton jBtn7;
    private javax.swing.JPanel jCont1;
    private javax.swing.JPanel jCont2;
    private javax.swing.JPanel jCont3;
    private javax.swing.JPanel jCont4;
    private javax.swing.JPanel jCont5;
    private javax.swing.JPanel jCont6;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jDeleteAffectation;
    private javax.swing.JButton jDeleteEmp;
    private javax.swing.JButton jImprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jNavBar;
    private javax.swing.JLabel jNombreAffect;
    private javax.swing.JLabel jNombreEmployes;
    private javax.swing.JLabel jNombreHistorique;
    private javax.swing.JButton jPrintAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton jSearch;
    private javax.swing.JTextField jSearchEmployes;
    private javax.swing.JButton jSuppressionMissions;
    private javax.swing.JTable jTableAffect;
    private javax.swing.JTable jTableDepartement;
    private javax.swing.JTable jTableEmploye;
    private javax.swing.JTable jTableListeEmployesNoAff;
    private javax.swing.JTable jTableMission;
    private javax.swing.JButton jUpdate;
    private javax.swing.JButton jUpdateAffect;
    private javax.swing.JButton jUpdateEmp;
    private keeptoo.KGradientPanel kGradientPanel10;
    private keeptoo.KGradientPanel kGradientPanel11;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private keeptoo.KGradientPanel kGradientPanel7;
    private keeptoo.KGradientPanel kGradientPanel8;
    private keeptoo.KGradientPanel kGradientPanel9;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables

}
